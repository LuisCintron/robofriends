{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBounries.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBounries","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","CardList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"gLAeeA,EAbF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAE3B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACE,6BAAKF,IACL,4BAAIC,WCYGK,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAElB,OACE,gCAEIA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OAAQ,cAAC,EAAD,CACNR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHAS,MAHzB,QCMWC,EAVG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKV,UAAU,MAAf,SACE,uBAAOA,UAAU,mCAAmCW,KAAK,SAASC,YAAY,gBAC5EC,SAAUH,OCKHI,EATA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACGJ,EAAMK,YCkBEC,G,uDApBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WAEE,OAAIG,KAAKJ,MAAMC,SACN,gEAEFG,KAAKX,MAAMK,a,GAjBMQ,cCmDbC,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAmBFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAnB1C,EAAKX,MAAQ,CACXlB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClByB,MAAM,8CACHC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GACJ,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAS9B,WACE,MAAgCZ,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACV8B,EAAenC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEvD,OACE,sBAAK1C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,CAAQ9B,UAAU,SAAlB,SACE,cAAC,EAAD,UACE,cAAC4C,EAAD,CAAUxC,OAAQmC,e,GAnCZX,aCGHiB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCdO,IAASC,OAEN,cAAC,EAAD,IAASC,SAASC,eAAe,SAIpCX,K","file":"static/js/main.cb6402af.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  \r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img alt='robot' src={`https://robohash.org/${id}?200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../components/Card'\r\n\r\nconst Cardlist = ({ robots }) => {\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user, i) => {\r\n          return (<Card key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email} />\r\n          )\r\n        })\r\n      };\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='Search Robots'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflowY: 'scroll', border: '2px soild black', height: '500px' }}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react'\r\n\r\nclass ErrorBounries extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.hasError) {\r\n      return <h1>Looks like thier is a error!! </h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBounries;\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport './App.css';\r\nimport ErrorBoundries from '../components/ErrorBounries';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then(response => {\r\n        return response.json()\r\n      })\r\n      .then(users => {\r\n        this.setState({ robots: users })\r\n      })\r\n\r\n  }\r\n\r\n  // onsearch changes the search box to different robots\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filterRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n    return (\r\n      <div className='tc'>\r\n        <h1 className='f1'>Robofriends</h1>\r\n        <SearchBox searchChange={this.onSearchChange} />\r\n        <Scroll className='scroll'>\r\n          <ErrorBoundries>\r\n            <CardList robots={filterRobots} />\r\n          </ErrorBoundries>\r\n\r\n        </Scroll>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index';\nimport App from './containers/App';\nimport './containers/App.css'\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n   <App />, document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}